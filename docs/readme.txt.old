
	■最新情報
		※後々保管先をどこかのバージョン管理に移します。

	■基本概念
		・ビジネスロジック上に「require_once」などの記述を書かずに、ファイル間の依存関係を、定義ファイルで明示します。
		・クラス間の依存性を小さくするため、ビジネスロジックに登場するクラスの差し替えを、定義ファイルの「マッピング」と言う定義で実現させます。
		・あくまで単なるライブラリ群としての側面を持ち続けます。MVCなど実装を強制するような機能は提供しません。

	■PHP5.2.0以降で動作
		datetime::modifyを使っているため。
		他にも5.2.0以降依存の関数を利用しています。
		推奨は5.3.0 以降

	■ディレクトリ構成
		projectroot/
			/core ← リネームOK
				CYOP.php ← リネームOK 設置深度変更原則不可
				CYOP.config.xml ← CYOPど同一ディレクトリである事必須&リネーム&設置深度変更原則不可
				CYOP.package.xml ← デフォルトのpackage定義ファイル 定数にて定義変更可能
			/lib ← リネームOK 深度変更OK(config.xmlにてネーム・深度共に設定)
				...

	■使い方
		projectroot/core/CYOP.config.xmlをプロジェクトの仕様に合わせ適宜定義
		projectroot/core/CYOP.package.xmlをプロジェクトの仕様に合わせ適宜定義
		projectroot/core/CYOP.phpを読み込む

	■CYOPを使っていてホワイトアウトが発生した場合
		読み込んだファイル内の定義エラーが濃厚です。
		CYOP.phpファイル内の「@include_once」と表記されている行の「@」を外して実行してみて下さい。
		ファイル読み込み時の定義エラーが可視化出来ます。
		尚、常に@を外した状態にすると、CYOPは思惑通りの動きをしなくなります。


以上
